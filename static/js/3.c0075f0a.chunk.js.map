{"version":3,"sources":["components/Messages/Messages.module.css","components/Messages/BuddysWindow.jsx","components/Messages/DialogsWindow.jsx","components/Messages/MessagesContainer.jsx","hoc/withAuthRedirect.jsx"],"names":["module","exports","User","props","path","id","to","name","BuddysWindow","arrUsers","map","el","DialogsWindow","arrMess","message","compose","connect","state","messagePage","MessagePage","isAuth","Auth","auth","sendMessage","newValue","Component","className","mcss","all","buddysWindow","dialogsWindow","value","TextNewMessage","onChange","e","target","cols","rows","onClick","type"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,IAAM,sBAAsB,aAAe,+BAA+B,cAAgB,kC,+DCEtGC,EAAO,SAACC,GACZ,IAAIC,EAAO,aAAaD,EAAME,GAC9B,OAAO,8BACL,eAAC,IAAD,CAASC,GAAIF,EAAb,cAAqBD,EAAMI,WAYhBC,EAPM,SAACL,GACRA,EAAMM,SAASC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAMN,GAAIM,EAAGN,GAAIE,KAAMI,EAAGJ,UAC/D,OAAO,8BACJJ,EAAMM,SAASC,KAAI,SAAAC,GAAE,OAAI,cAAC,EAAD,CAAMN,GAAIM,EAAGN,GAAIE,KAAMI,EAAGJ,aCLzCK,EAPO,SAACT,GACnB,OAAO,8BACPA,EAAMU,QAAQH,KAAI,SAAAC,GAAE,OAAG,gCAAMA,EAAGG,QAAT,a,uDCgCXC,sBACdC,aAXoB,SAACC,GACrB,MAAO,CACLC,YAAaD,EAAME,YACnBC,OAAQH,EAAMI,KAAKC,QAQI,CAAEC,gBAAaC,gBCnCV,SAACC,GAS7B,OAPyB,SAACtB,GAGlB,OAAKA,EAAMiB,OACJ,cAACK,EAAD,eAAetB,IADI,cAAC,IAAD,CAAUG,GAAI,cD6BpCS,EA5BU,SAAC,GAA0C,IAAzCG,EAAwC,EAAxCA,YAAaM,EAA2B,EAA3BA,SAAUD,EAAiB,EAAjBA,YAClD,OAAO,sBAAKG,UAAWC,IAAKC,IAArB,UACJ,qBAAKF,UAAWC,IAAKE,aAArB,SACE,cAAC,EAAD,CAAcpB,SAAUS,EAAYT,aACtC,qBAAKiB,UAAWC,IAAKG,cAArB,SACE,cAAC,EAAD,CAAejB,QAASK,EAAYL,YACtC,gCACE,0BAAUkB,MAAOb,EAAYc,eAC3BC,SAAU,SAACC,GAAOV,EAASU,EAAEC,OAAOJ,QACpCxB,KAAK,WAAW6B,KAAK,KAAKC,KAAK,MACjC,uBAAOC,QAAS,WAAOf,KAAgBgB,KAAK,SAASR,MAAM","file":"static/js/3.c0075f0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"all\":\"Messages_all__3AZaZ\",\"buddysWindow\":\"Messages_buddysWindow__lQ-TH\",\"dialogsWindow\":\"Messages_dialogsWindow__2N4WY\"};","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = (props) => {\r\n  let path = \"/messages/\"+props.id;\r\n  return <div >\r\n    <NavLink to={path}> {props.name}</NavLink>\r\n  </div >\r\n}\r\n\r\n\r\nconst BuddysWindow = (props) => {\r\n  const mapq =props.arrUsers.map(el => <User id={el.id} name={el.name}/>);\r\n  return <div >\r\n    {props.arrUsers.map(el => <User id={el.id} name={el.name}/>)}\r\n  </div>\r\n}\r\n\r\nexport default BuddysWindow","import React from 'react';\r\n\r\nconst DialogsWindow = (props) => {\r\n    return <div>\r\n   {props.arrMess.map(el =><div>{el.message} </div>)}\r\n  </div>\r\n}\r\n\r\n\r\nexport default DialogsWindow","import BuddysWindow from './BuddysWindow';\r\nimport DialogsWindow from './DialogsWindow';\r\nimport { newValue, sendMessage } from \"./../../Redux/MessageReducer\";\r\nimport mcss from \"./Messages.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\n\r\nconst MessagesContainer = ({messagePage, newValue, sendMessage}) => {\r\n return <div className={mcss.all}>\r\n    <div className={mcss.buddysWindow}>\r\n      <BuddysWindow arrUsers={messagePage.arrUsers} /></div>\r\n    <div className={mcss.dialogsWindow}>\r\n      <DialogsWindow arrMess={messagePage.arrMess} /></div>\r\n    <div>\r\n      <textarea value={messagePage.TextNewMessage}\r\n        onChange={(e) => {newValue(e.target.value)        }}\r\n        name=\"sendMess\" cols=\"80\" rows=\"3\"></textarea>\r\n      <input onClick={() => {sendMessage()}} type=\"submit\" value=\"Send message\" />\r\n    </div>\r\n\r\n  </div>\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagePage: state.MessagePage,\r\n    isAuth: state.Auth.auth\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default  compose(\r\n  connect(mapStateToProps, { sendMessage, newValue }),\r\n  withAuthRedirect\r\n   )(MessagesContainer)\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nexport const withAuthRedirect = (Component) => {  // это просто функция, которая возвращает компоненту и её пропсы дальше, если пользователь залогинен, \r\n                                       //если нет -  выполняет редирект. данная функция вставляется в коннект вместо компоненты, компонента вставляется в её аргумент\r\n    const RedirectComponent =(props)=> {\r\n               \r\n                   \r\n            if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n            return <Component {...props} />\r\n        \r\n    }\r\n    return RedirectComponent\r\n}\r\n\r\n"],"sourceRoot":""}